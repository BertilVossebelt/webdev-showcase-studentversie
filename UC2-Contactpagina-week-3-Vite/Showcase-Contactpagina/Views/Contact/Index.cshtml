@model Contactform
@{
    ViewData["Title"] = "Contactpagina";
}
<script src="https://www.google.com/recaptcha/api.js" async defer></script>

<div id="#SpinnerBox" class="spinner-box hide">
    <div class="spinner">
        <div class=" spinner-border text-light" role="status"></div>
        <p>verzenden...</p>
    </div>
</div>

<div class="page">
    <section class="contact">
        <h1>Contact</h1>
        <div id="SuccessMessage" class="alert alert-success hide" role="alert" onclick="hideSuccessMessage()"></div>
        <div id="ErrorMessage" class="alert alert-danger hide" role="alert" onclick="hideErrorMessage()"></div>
        <form method="post" class="form-contactpagina">
            <div class="form-contactpagina__inputelement fx-col">
                <label for="firstname">Voornaam: </label>
                <input type="text" asp-for="FirstName" name="firstname" id="firstname" required>
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="lastname">Achternaam: </label>
                <input type="text" asp-for="LastName" name="lastname" id="lastname" required>
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="email">E-mailadres: </label>
                <input type="email" asp-for="Email" name="email" id="email">
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="phone">Telefoonnummer: </label>
                <input type="tel" asp-for="Phone" name="phone" id="phone">
            </div>

            <div class="g-recaptcha" data-sitekey="6LcYW98qAAAAAAflDBqVvT0T2Viy4pX10bMWhy7f"></div>

            <div class="form-contactpagina__inputelement">
                <input id="SubmitButton" type="submit" value="Verstuur!" disabled>
            </div>
        </form>
    </section>
</div>
<script type="text/javascript">
    const inputFirstName = document.getElementById('firstname');
    const inputLastName = document.getElementById('lastname');
    const inputEmail = document.getElementById('email');
    const inputPhone = document.getElementById('phone');
    const formFields = 4;

    let validFirstName = false;
    let validLastName = false;
    let validEmail = false;
    let validPhone = false;

    const validateFirstName = () => {
        if (inputFirstName.value.length === 0) {
            inputFirstName.setCustomValidity("Voornaam mag niet leeg zijn!");
            validFirstName = false;
            toggleSubmitButton();
            inputFirstName.classList.add("invalid");
            inputFirstName.reportValidity();
            return;
        }

        const pattern = /^[a-zA-Z ]*$/;
        console.log(inputFirstName.value);
        if (!inputFirstName.value.match(pattern)) {
            console.log("false");
            inputFirstName.setCustomValidity("Alleen letters toegestaan!");
            validFirstName = false;
            toggleSubmitButton();
            inputFirstName.classList.add("invalid");
            inputFirstName.reportValidity();
            return;
        }

        if (inputFirstName.value.length > 60) {
            inputFirstName.setCustomValidity("Voornaam mag niet langer dan 60 tekens zijn!");
            validFirstName = false;
            toggleSubmitButton();
            inputFirstName.classList.add("invalid");
            inputFirstName.reportValidity();
            return;
        }

        validFirstName = true;
        toggleSubmitButton();
        inputFirstName.classList.remove("invalid");
        inputFirstName.setCustomValidity("");
    }

    const validateLastName = () => {
        if (inputLastName.value.length === 0) {
            inputLastName.setCustomValidity("Achternaam mag niet leeg zijn!");
            validLastName = false;
            toggleSubmitButton();
            inputLastName.classList.add("invalid");
            inputLastName.reportValidity();
            return;
        }

        const pattern = /^[a-zA-Z ]*$/;
        if (!inputLastName.value.match(pattern)) {
            inputLastName.setCustomValidity("Alleen letters toegestaan!");
            validLastName = false;
            toggleSubmitButton();
            inputLastName.classList.add("invalid");
            inputLastName.reportValidity();
            return;
        }

        if (inputLastName.value.length > 60) {
            inputLastName.setCustomValidity("Achternaam mag niet langer dan 60 tekens zijn!");
            validLastName = false;
            toggleSubmitButton();
            inputLastName.classList.add("invalid");
            inputLastName.reportValidity();
            return;
        }
        
        validLastName = true;
        toggleSubmitButton();
        inputLastName.classList.remove("invalid");
        inputLastName.setCustomValidity("");
    }

    const validateEmail = () => {
        if (inputEmail.value.length === 0) {
            inputEmail.setCustomValidity("E-mailadres mag niet leeg zijn!");
            validEmail = false;
            toggleSubmitButton();
            inputEmail.classList.add("invalid");
            inputEmail.reportValidity();
            return;
        }

        if (inputEmail.validity.typeMismatch) {
            inputEmail.setCustomValidity("Voer een geldig e-mailadres in!");
            validEmail = false;
            toggleSubmitButton();
            inputEmail.classList.add("invalid");
            inputEmail.reportValidity();
            return;
        }

        if (inputEmail.value.length > 80) {
            inputEmail.setCustomValidity("Email mag niet langer dan 80 tekens zijn!");
            validEmail = false;
            toggleSubmitButton();
            inputEmail.classList.add("invalid");
            inputEmail.reportValidity();
            return;
        }

        validEmail = true;
        toggleSubmitButton();
        inputEmail.classList.remove("invalid");
        inputEmail.setCustomValidity("");
    }

    const validatePhone = () => {
        if (inputPhone.value.length === 0) {
            inputPhone.setCustomValidity("Telefoonnummer mag niet leeg zijn!");
            validPhone = false;
            toggleSubmitButton();
            inputPhone.classList.add("invalid");
            inputPhone.reportValidity();
            return;
        }

        const phonePattern = /^(?:0|(?:\+|00) ?31 ?)(?:(?:[1-9] ?(?:[0-9] ?){8})|(?:6 ?-? ?[1-9] ?(?:[0-9] ?){7})|(?:[1,2,3,4,5,7,8,9]\d ?-? ?[1-9] ?(?:[0-9] ?){6})|(?:[1,2,3,4,5,7,8,9]\d{2} ?-? ?[1-9] ?(?:[0-9] ?){5}))$/;
        if (!phonePattern.test(inputPhone.value)) {
            inputPhone.setCustomValidity("Voer een geldig telefoonnummer in!");
            validPhone = false;
            toggleSubmitButton();
            inputPhone.classList.add("invalid");
            inputPhone.reportValidity();
            return;
        }

        if (inputPhone.value.length > 20) {
            inputPhone.setCustomValidity("telefoonnummer mag niet langer dan 20 cijfers zijn!");
            validPhone = false;
            toggleSubmitButton();
            inputPhone.classList.add("invalid");
            inputPhone.reportValidity();
            return;
        }

        validPhone = true;
        toggleSubmitButton();
        inputPhone.classList.remove("invalid");
        inputPhone.setCustomValidity("");
    }

    const validateForm = () => {
        validateFirstName();
        validateLastName();
        validateEmail();
        validatePhone();
    }

    const toggleSubmitButton = () => {
        if (!validFirstName || !validLastName || !validEmail || !validPhone) {
            document.getElementById("SubmitButton").disabled = true;
            return;
        }

        document.getElementById("SubmitButton").disabled = false;
    }

    const hideSuccessMessage = () => {
        document.getElementById('SuccessMessage').classList.add("hide");
    }
    
    const hideErrorMessage = () => {
        document.getElementById('ErrorMessage').classList.add("hide");
    }

    // Event listener voor first name
    inputFirstName.addEventListener("blur", validateFirstName);
    inputFirstName.addEventListener("input", validateFirstName);

    // Event listener voor last name
    inputLastName.addEventListener("blur", validateLastName);
    inputLastName.addEventListener("input", validateLastName);

    // Event listener voor email
    // Aanbevolen events voor formulieren: https://github.com/Windesheim-HBO-ICT/client_studenten/blob/main/lessen/week-2/les-1/form-constraint-validation-api/studentversie/events-voor-invoer-validatie.md
    inputEmail.addEventListener("blur", validateEmail);

    // Event listener voor phone
    inputPhone.addEventListener("blur", validatePhone);

    const form = document.querySelector('.form-contactpagina');

    // Event listener voor formulierinzending
    form.addEventListener('submit', function (event) {
        event.preventDefault(); // Voorkom standaard formulierinzending

        let spinner = document.getElementById("#SpinnerBox");
        spinner.classList.remove("hide");

        // Valideer alle velden voor de zekerheid
        validateForm();

        const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
        const token = grecaptcha.getResponse();
        console.log(token);
        if (token.length === 0) {
            alert("Vul de reCAPTCHA in alstublieft.");
            return;
        }

        const formData = new URLSearchParams();
        formData.append('firstname', form.firstname.value);
        formData.append('lastname', form.lastname.value);
        formData.append('email', form.email.value);
        formData.append('phone', form.phone.value);
        formData.append('__RequestVerificationToken', csrfToken);
        formData.append('gRecaptchaResponse', token);

        // Voer een POST-verzoek uit
        fetch('/contact', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: formData
        }).then(response => {
            spinner.classList.add("hide");
            if (!response.ok) throw new Error('Netwerkrespons was niet OK.');
            return response.text();
        }).then(() => {
            // Verwerk succesvolle formulierinzending
            spinner.classList.add("hide");
            document.getElementById('SuccessMessage').innerText = "Het verzoek is verstuurd! Ik neem zo snel mogelijk contact met je op.";
            document.getElementById('SuccessMessage').classList.remove("hide");
            form.reset();
        }).catch(error => {
            spinner.classList.add("hide");
            document.getElementById('ErrorMessage').innerText = "Er was een probleem met de formulierinzending. Probeer het later nog eens.";
            document.getElementById('ErrorMessage').classList.remove("hide");
            console.error('Er was een probleem met de formulierinzending:', error);
            alert(error.message)
        });
    });
</script>
